// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg {

namespace {

const ::google::protobuf::Descriptor* Login_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_info_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_5fmsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_net_5fmsg_2eproto() {
  protobuf_AddDesc_net_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net_msg.proto");
  GOOGLE_CHECK(file != NULL);
  Login_info_descriptor_ = file->message_type(0);
  static const int Login_info_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, sign_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, passwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, game_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, won_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, ip_),
  };
  Login_info_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_info_descriptor_,
      Login_info::default_instance_,
      Login_info_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_info),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_info, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_info_descriptor_, &Login_info::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_5fmsg_2eproto() {
  delete Login_info::default_instance_;
  delete Login_info_reflection_;
}

void protobuf_AddDesc_net_5fmsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_net_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rnet_msg.proto\022\003msg\"x\n\nLogin_info\022\021\n\tsi"
    "gn_type\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\016\n\006passwd\030\003 "
    "\001(\t\022\020\n\010game_seq\030\004 \001(\r\022\013\n\003won\030\005 \001(\010\022\016\n\006re"
    "sult\030\007 \001(\r\022\n\n\002ip\030\010 \001(\tB\225\001\n\033com.example.t"
    "utorial.protosB\021AddressBookProtosP\001Z:git"
    "hub.com/protocolbuffers/protobuf/example"
    "s/go/tutorialpb\252\002$Google.Protobuf.Exampl"
    "es.AddressBookb\006proto3", 302);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net_msg.proto", &protobuf_RegisterTypes);
  Login_info::default_instance_ = new Login_info();
  Login_info::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_5fmsg_2eproto {
  StaticDescriptorInitializer_net_5fmsg_2eproto() {
    protobuf_AddDesc_net_5fmsg_2eproto();
  }
} static_descriptor_initializer_net_5fmsg_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_info::kSignTypeFieldNumber;
const int Login_info::kNameFieldNumber;
const int Login_info::kPasswdFieldNumber;
const int Login_info::kGameSeqFieldNumber;
const int Login_info::kWonFieldNumber;
const int Login_info::kResultFieldNumber;
const int Login_info::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_info::Login_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.Login_info)
}

void Login_info::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_info::Login_info(const Login_info& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg.Login_info)
}

void Login_info::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sign_type_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_seq_ = 0u;
  won_ = false;
  result_ = 0u;
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Login_info::~Login_info() {
  // @@protoc_insertion_point(destructor:msg.Login_info)
  SharedDtor();
}

void Login_info::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_info_descriptor_;
}

const Login_info& Login_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_5fmsg_2eproto();
  return *default_instance_;
}

Login_info* Login_info::default_instance_ = NULL;

Login_info* Login_info::New(::google::protobuf::Arena* arena) const {
  Login_info* n = new Login_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_info::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.Login_info)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Login_info, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Login_info*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sign_type_, game_seq_);
  ZR_(won_, result_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Login_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.Login_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sign_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sign_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msg.Login_info.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_passwd;
        break;
      }

      // optional string passwd = 3;
      case 3: {
        if (tag == 26) {
         parse_passwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msg.Login_info.passwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_game_seq;
        break;
      }

      // optional uint32 game_seq = 4;
      case 4: {
        if (tag == 32) {
         parse_game_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_seq_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_won;
        break;
      }

      // optional bool won = 5;
      case 5: {
        if (tag == 40) {
         parse_won:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &won_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_result;
        break;
      }

      // optional uint32 result = 7;
      case 7: {
        if (tag == 56) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_ip;
        break;
      }

      // optional string ip = 8;
      case 8: {
        if (tag == 66) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msg.Login_info.ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.Login_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.Login_info)
  return false;
#undef DO_
}

void Login_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.Login_info)
  // optional uint32 sign_type = 1;
  if (this->sign_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sign_type(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg.Login_info.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string passwd = 3;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg.Login_info.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->passwd(), output);
  }

  // optional uint32 game_seq = 4;
  if (this->game_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_seq(), output);
  }

  // optional bool won = 5;
  if (this->won() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->won(), output);
  }

  // optional uint32 result = 7;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->result(), output);
  }

  // optional string ip = 8;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg.Login_info.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->ip(), output);
  }

  // @@protoc_insertion_point(serialize_end:msg.Login_info)
}

::google::protobuf::uint8* Login_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.Login_info)
  // optional uint32 sign_type = 1;
  if (this->sign_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sign_type(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg.Login_info.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string passwd = 3;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg.Login_info.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->passwd(), target);
  }

  // optional uint32 game_seq = 4;
  if (this->game_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_seq(), target);
  }

  // optional bool won = 5;
  if (this->won() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->won(), target);
  }

  // optional uint32 result = 7;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->result(), target);
  }

  // optional string ip = 8;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg.Login_info.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->ip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:msg.Login_info)
  return target;
}

int Login_info::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg.Login_info)
  int total_size = 0;

  // optional uint32 sign_type = 1;
  if (this->sign_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sign_type());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string passwd = 3;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // optional uint32 game_seq = 4;
  if (this->game_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_seq());
  }

  // optional bool won = 5;
  if (this->won() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 result = 7;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // optional string ip = 8;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.Login_info)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_info* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.Login_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.Login_info)
    MergeFrom(*source);
  }
}

void Login_info::MergeFrom(const Login_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.Login_info)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sign_type() != 0) {
    set_sign_type(from.sign_type());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.game_seq() != 0) {
    set_game_seq(from.game_seq());
  }
  if (from.won() != 0) {
    set_won(from.won());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
}

void Login_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.Login_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_info::CopyFrom(const Login_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.Login_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_info::IsInitialized() const {

  return true;
}

void Login_info::Swap(Login_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_info::InternalSwap(Login_info* other) {
  std::swap(sign_type_, other->sign_type_);
  name_.Swap(&other->name_);
  passwd_.Swap(&other->passwd_);
  std::swap(game_seq_, other->game_seq_);
  std::swap(won_, other->won_);
  std::swap(result_, other->result_);
  ip_.Swap(&other->ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_info_descriptor_;
  metadata.reflection = Login_info_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_info

// optional uint32 sign_type = 1;
void Login_info::clear_sign_type() {
  sign_type_ = 0u;
}
 ::google::protobuf::uint32 Login_info::sign_type() const {
  // @@protoc_insertion_point(field_get:msg.Login_info.sign_type)
  return sign_type_;
}
 void Login_info::set_sign_type(::google::protobuf::uint32 value) {
  
  sign_type_ = value;
  // @@protoc_insertion_point(field_set:msg.Login_info.sign_type)
}

// optional string name = 2;
void Login_info::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_info::name() const {
  // @@protoc_insertion_point(field_get:msg.Login_info.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_info::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Login_info.name)
}
 void Login_info::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Login_info.name)
}
 void Login_info::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Login_info.name)
}
 ::std::string* Login_info::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:msg.Login_info.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_info::release_name() {
  // @@protoc_insertion_point(field_release:msg.Login_info.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_info::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.Login_info.name)
}

// optional string passwd = 3;
void Login_info::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_info::passwd() const {
  // @@protoc_insertion_point(field_get:msg.Login_info.passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_info::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Login_info.passwd)
}
 void Login_info::set_passwd(const char* value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Login_info.passwd)
}
 void Login_info::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Login_info.passwd)
}
 ::std::string* Login_info::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:msg.Login_info.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_info::release_passwd() {
  // @@protoc_insertion_point(field_release:msg.Login_info.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_info::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:msg.Login_info.passwd)
}

// optional uint32 game_seq = 4;
void Login_info::clear_game_seq() {
  game_seq_ = 0u;
}
 ::google::protobuf::uint32 Login_info::game_seq() const {
  // @@protoc_insertion_point(field_get:msg.Login_info.game_seq)
  return game_seq_;
}
 void Login_info::set_game_seq(::google::protobuf::uint32 value) {
  
  game_seq_ = value;
  // @@protoc_insertion_point(field_set:msg.Login_info.game_seq)
}

// optional bool won = 5;
void Login_info::clear_won() {
  won_ = false;
}
 bool Login_info::won() const {
  // @@protoc_insertion_point(field_get:msg.Login_info.won)
  return won_;
}
 void Login_info::set_won(bool value) {
  
  won_ = value;
  // @@protoc_insertion_point(field_set:msg.Login_info.won)
}

// optional uint32 result = 7;
void Login_info::clear_result() {
  result_ = 0u;
}
 ::google::protobuf::uint32 Login_info::result() const {
  // @@protoc_insertion_point(field_get:msg.Login_info.result)
  return result_;
}
 void Login_info::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:msg.Login_info.result)
}

// optional string ip = 8;
void Login_info::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_info::ip() const {
  // @@protoc_insertion_point(field_get:msg.Login_info.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_info::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Login_info.ip)
}
 void Login_info::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Login_info.ip)
}
 void Login_info::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Login_info.ip)
}
 ::std::string* Login_info::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:msg.Login_info.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_info::release_ip() {
  // @@protoc_insertion_point(field_release:msg.Login_info.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_info::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:msg.Login_info.ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

// @@protoc_insertion_point(global_scope)
